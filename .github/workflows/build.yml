name: Build ruby.wasm
on:
  push:
    branches: [main]
    tags: ['*']
  workflow_call:

jobs:
  build-builder-image:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { tag: wasm32-unknown-wasi }
          - { tag: wasm32-unknown-emscripten }
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: builders/${{ matrix.entry.tag }}
          outputs: type=oci,dest=/tmp/image.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ruby.wasm-builder-${{ matrix.entry.tag }}
          path: /tmp/image.tar
      - name: Push
        uses: docker/build-push-action@v2
        with:
          context: builders/${{ matrix.entry.tag }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/${{ github.repository_owner }}/ruby.wasm-builder:${{ matrix.entry.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # https://github.com/docker/build-push-action/issues/252#issuecomment-744400434
      - run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-ruby-release:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { build: "head-wasm32-unknown-emscripten-full", builder: "wasm32-unknown-emscripten" }
          - { build: "head-wasm32-unknown-emscripten-minimal", builder: "wasm32-unknown-emscripten" }
          - { build: "head-wasm32-unknown-wasi-full", builder: "wasm32-unknown-wasi" }
          - { build: "head-wasm32-unknown-wasi-full-js", builder: "wasm32-unknown-wasi" }
          - { build: "head-wasm32-unknown-wasi-minimal", builder: "wasm32-unknown-wasi" }
          - { build: "head-wasm32-unknown-wasi-minimal-js", builder: "wasm32-unknown-wasi" }
    needs: [build-builder-image]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Fetch builder image
        uses: actions/download-artifact@v2
        with:
          name: ruby.wasm-builder-${{ matrix.entry.builder }}
      - name: Load builder image
        id: load-image
        run: |
          docker load --input image.tar | tee image-info.txt
          echo "BUILDER_IMAGE_ID=$(cut -d ':' -f 3 image-info.txt)" >> $GITHUB_ENV
      - name: rake build:${{ matrix.entry.build }}
        run: docker run -v "$GITHUB_WORKSPACE:/build" -w /build sha256:$BUILDER_IMAGE_ID rake build:${{ matrix.entry.build }}
      - run: tar cfz ruby-${{ matrix.entry.build }}.tar.gz -C ./rubies ${{ matrix.entry.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.entry.build }}
          path: ruby-${{ matrix.entry.build }}.tar.gz

  build-npm-packages:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { package: ruby-wasm-emscripten, build: "head-wasm32-unknown-emscripten-full", builder: wasm32-unknown-emscripten }
          - { package: ruby-wasm-wasi, build: "head-wasm32-unknown-wasi-full-js", builder: wasm32-unknown-wasi }
    needs: [build-ruby-release]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.entry.build }}
      - run: tar xfz ruby-${{ matrix.entry.build }}.tar.gz
      - run: |
          (cd ./packages/${{ matrix.entry.package }} && npm install)
          docker run -v $(pwd):/work -w /work \
            "ghcr.io/${{ github.repository_owner }}/ruby.wasm-builder:${{ matrix.entry.builder }}" \
            "./packages/${{ matrix.entry.package }}/build-package.sh" "${{ matrix.entry.build }}"
      - run: sudo npm --no-git-tag-version version 0.0.0-latest-main && sudo npm pack
        working-directory: ./packages/${{ matrix.entry.package }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.entry.package }}
          path: ./packages/${{ matrix.entry.package }}/${{ matrix.entry.package }}-0.0.0-latest-main.tgz

  release-artifacts:
    needs: [build-ruby-release, build-npm-packages]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: release
      - run: rake "publish[$GITHUB_REF_NAME]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
