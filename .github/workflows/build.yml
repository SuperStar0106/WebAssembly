name: Build ruby.wasm
on:
  push:
    branches: [main]

jobs:
  build-builder-image:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { tag: wasm32-unknown-wasi }
          - { tag: wasm32-unknown-emscripten }
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: builders/${{ matrix.entry.tag }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/ruby.wasm-builder:${{ matrix.entry.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # https://github.com/docker/build-push-action/issues/252#issuecomment-744400434
      - run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-ruby-release:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { flavor: minimal, target: wasm32-unknown-wasi,       configure_args: '--with-ext="" --with-static-linked-ext', ldflags: "-Xlinker -zstack-size=16777216" }
          - { flavor: full,    target: wasm32-unknown-wasi,       configure_args: '--with-ext="bigdecimal,cgi/escape,continuation,coverage,date,dbm,digest/bubblebabble,digest,digest/md5,digest/rmd160,digest/sha1,digest/sha2,etc,fcntl,fiber,gdbm,json,json/generator,json/parser,nkf,objspace,pathname,psych,racc/cparse,rbconfig/sizeof,ripper,stringio,strscan,monitor" --with-static-linked-ext', ldflags: "-Xlinker -zstack-size=16777216" }
          - { flavor: minimal, target: wasm32-unknown-emscripten, configure_args: '--with-ext="" --with-static-linked-ext CC=emcc LD=emcc AR=emar RANLIB=emranlib', ldflags: "-s MODULARIZE=1 -Xlinker -zstack-size=16777216" }
          - { flavor: full,    target: wasm32-unknown-emscripten, configure_args: '--with-ext="bigdecimal,cgi/escape,continuation,coverage,date,dbm,digest/bubblebabble,digest,digest/md5,digest/rmd160,digest/sha1,digest/sha2,etc,fcntl,fiber,gdbm,json,json/generator,json/parser,nkf,objspace,pathname,psych,racc/cparse,rbconfig/sizeof,ripper,stringio,strscan,monitor" --with-static-linked-ext CC=emcc LD=emcc AR=emar RANLIB=emranlib', ldflags: "-s MODULARIZE=1 -Xlinker -zstack-size=16777216" }
    needs: [build-builder-image]
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/${{ github.repository_owner }}/ruby.wasm-builder:${{ matrix.entry.target }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: kateinoigakukun/ruby
          ref: e3b5c3c232f151bd4de4e6bf2d48790987a4ae96
      - run: ./autogen.sh
      - run: |
          ./configure LDFLAGS="${{ matrix.entry.ldflags }}" debugflags="-g0" \
            --host ${{ matrix.entry.target }} --build x86_64-pc-linux-gnu \
            --with-destdir=./${{ matrix.entry.target }}-${{ matrix.entry.flavor }} \
            ${{ matrix.entry.configure_args }}
      - run: make install
      # Install ruby.wasm manually because rbinstall.rb doesn't recognize ruby.wasm for now
      # cf. https://github.com/ruby/ruby/blob/4e4c4fab3c25a056688939ae8e003a049fc401ee/tool/rbinstall.rb#L375
      - run: cp ruby.wasm wasm32-unknown-emscripten-${{ matrix.entry.flavor }}/usr/local/bin/ruby.wasm
        if: ${{ matrix.entry.target == 'wasm32-unknown-emscripten' }}
      - run: tar cfz ${{ matrix.entry.target }}-${{ matrix.entry.flavor }}.tar.gz ${{ matrix.entry.target }}-${{ matrix.entry.flavor }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.entry.target }}-${{ matrix.entry.flavor }}
          path: ${{ matrix.entry.target }}-${{ matrix.entry.flavor }}.tar.gz

  build-npm-packages:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { package: ruby-wasm-emscripten, target: wasm32-unknown-emscripten, flavor: full }
          - { package: ruby-wasm-wasi,       target: wasm32-unknown-wasi      , flavor: full }
    needs: [build-ruby-release]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.entry.target }}-${{ matrix.entry.flavor }}
      - run: tar xfz ${{ matrix.entry.target }}-${{ matrix.entry.flavor }}.tar.gz
      - run: |
          (cd ./packages/${{ matrix.entry.package }} && npm install)
          docker run -v $(pwd):/work -w /work \
            "ghcr.io/${{ github.repository_owner }}/ruby.wasm-builder:${{ matrix.entry.target }}" \
            "./packages/${{ matrix.entry.package }}/build-package.sh" "${{ matrix.entry.target }}-${{ matrix.entry.flavor }}" ./dist
      - run: npm --no-git-tag-version version 0.0.0-latest-main && npm pack
        working-directory: ./dist
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.entry.package }}
          path: dist/${{ matrix.entry.package }}-0.0.0-latest-main.tar.gz
